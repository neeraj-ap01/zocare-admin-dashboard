import {
  Field,
  Form,
  User,
  Group,
  Tag,
  View,
  DashboardStats,
  RecentActivity,
} from "../../shared/types";

// Mock data store
export const mockData = {
  fields: [
    {
      id: "1",
      name: "priority",
      label: "Priority",
      type: "select" as const,
      required: true,
      options: [
        { id: "1", label: "Low", value: "low", color: "#10b981" },
        { id: "2", label: "Medium", value: "medium", color: "#f59e0b" },
        { id: "3", label: "High", value: "high", color: "#ef4444" },
        { id: "4", label: "Critical", value: "critical", color: "#dc2626" },
      ],
      isActive: true,
      createdAt: new Date("2024-01-01"),
      updatedAt: new Date("2024-01-01"),
    },
    {
      id: "2",
      name: "due_date",
      label: "Due Date",
      type: "date" as const,
      required: false,
      placeholder: "Select due date",
      isActive: true,
      createdAt: new Date("2024-01-02"),
      updatedAt: new Date("2024-01-02"),
    },
    {
      id: "3",
      name: "description",
      label: "Description",
      type: "textarea" as const,
      required: true,
      placeholder: "Describe the issue in detail",
      validation: {
        min: 10,
        max: 1000,
        message: "Description must be between 10 and 1000 characters",
      },
      isActive: true,
      createdAt: new Date("2024-01-03"),
      updatedAt: new Date("2024-01-03"),
    },
    {
      id: "4",
      name: "category",
      label: "Category",
      type: "select" as const,
      required: true,
      options: [
        { id: "1", label: "Bug Report", value: "bug", color: "#ef4444" },
        {
          id: "2",
          label: "Feature Request",
          value: "feature",
          color: "#06b6d4",
        },
        { id: "3", label: "Support", value: "support", color: "#10b981" },
        { id: "4", label: "Documentation", value: "docs", color: "#8b5cf6" },
      ],
      isActive: true,
      createdAt: new Date("2024-01-04"),
      updatedAt: new Date("2024-01-04"),
    },
  ] as Field[],

  forms: [
    {
      id: "1",
      name: "Support Ticket Form",
      description: "Default form for support tickets",
      fields: [],
      isActive: true,
      divisionId: "1",
      createdAt: new Date("2024-01-01"),
      updatedAt: new Date("2024-01-01"),
    },
    {
      id: "2",
      name: "Bug Report Form",
      description: "Specialized form for bug reports",
      fields: [],
      isActive: true,
      divisionId: "1",
      createdAt: new Date("2024-01-02"),
      updatedAt: new Date("2024-01-02"),
    },
    {
      id: "3",
      name: "Feature Request Form",
      description: "Form for feature requests and enhancements",
      fields: [],
      isActive: true,
      divisionId: "1",
      createdAt: new Date("2024-01-03"),
      updatedAt: new Date("2024-01-03"),
    },
  ] as Form[],

  users: [
    {
      id: "1",
      email: "john.doe@example.com",
      firstName: "John",
      lastName: "Doe",
      role: "admin" as const,
      isActive: true,
      lastLoginAt: new Date("2024-01-15T10:30:00Z"),
      groupIds: ["1", "2"],
      divisionId: "1",
      createdAt: new Date("2024-01-01"),
      updatedAt: new Date("2024-01-15"),
    },
    {
      id: "2",
      email: "sarah.wilson@example.com",
      firstName: "Sarah",
      lastName: "Wilson",
      role: "manager" as const,
      isActive: true,
      lastLoginAt: new Date("2024-01-15T08:15:00Z"),
      groupIds: ["1"],
      divisionId: "1",
      createdAt: new Date("2024-01-02"),
      updatedAt: new Date("2024-01-15"),
    },
    {
      id: "3",
      email: "mike.johnson@example.com",
      firstName: "Mike",
      lastName: "Johnson",
      role: "agent" as const,
      isActive: true,
      lastLoginAt: new Date("2024-01-14T16:45:00Z"),
      groupIds: ["2"],
      divisionId: "1",
      createdAt: new Date("2024-01-03"),
      updatedAt: new Date("2024-01-14"),
    },
    {
      id: "4",
      email: "anna.brown@example.com",
      firstName: "Anna",
      lastName: "Brown",
      role: "agent" as const,
      isActive: true,
      lastLoginAt: new Date("2024-01-15T09:20:00Z"),
      groupIds: ["2"],
      divisionId: "1",
      createdAt: new Date("2024-01-04"),
      updatedAt: new Date("2024-01-15"),
    },
  ] as User[],

  groups: [
    {
      id: "1",
      name: "Support Team",
      description: "Primary support team for handling tickets",
      color: "#8b5cf6",
      userIds: ["1", "2"],
      permissions: [],
      divisionId: "1",
      createdAt: new Date("2024-01-01"),
      updatedAt: new Date("2024-01-01"),
    },
    {
      id: "2",
      name: "Technical Team",
      description: "Technical team for complex issues and development",
      color: "#06b6d4",
      userIds: ["1", "3", "4"],
      permissions: [],
      divisionId: "1",
      createdAt: new Date("2024-01-02"),
      updatedAt: new Date("2024-01-02"),
    },
    {
      id: "3",
      name: "Quality Assurance",
      description: "QA team for testing and validation",
      color: "#10b981",
      userIds: [],
      permissions: [],
      divisionId: "1",
      createdAt: new Date("2024-01-03"),
      updatedAt: new Date("2024-01-03"),
    },
  ] as Group[],

  tags: [
    {
      id: "1",
      name: "Bug",
      color: "#ef4444",
      description: "Software bug or error",
      isActive: true,
      usageCount: 45,
      divisionId: "1",
      createdAt: new Date("2024-01-01"),
      updatedAt: new Date("2024-01-01"),
    },
    {
      id: "2",
      name: "Enhancement",
      color: "#06b6d4",
      description: "Feature enhancement or improvement",
      isActive: true,
      usageCount: 32,
      divisionId: "1",
      createdAt: new Date("2024-01-02"),
      updatedAt: new Date("2024-01-02"),
    },
    {
      id: "3",
      name: "Urgent",
      color: "#f59e0b",
      description: "Requires immediate attention",
      isActive: true,
      usageCount: 18,
      divisionId: "1",
      createdAt: new Date("2024-01-03"),
      updatedAt: new Date("2024-01-03"),
    },
    {
      id: "4",
      name: "Documentation",
      color: "#8b5cf6",
      description: "Documentation related",
      isActive: true,
      usageCount: 12,
      divisionId: "1",
      createdAt: new Date("2024-01-04"),
      updatedAt: new Date("2024-01-04"),
    },
    {
      id: "5",
      name: "Training",
      color: "#10b981",
      description: "Training or educational content",
      isActive: true,
      usageCount: 8,
      divisionId: "1",
      createdAt: new Date("2024-01-05"),
      updatedAt: new Date("2024-01-05"),
    },
  ] as Tag[],

  views: [
    {
      id: "1",
      name: "Open Tickets",
      description: "All open support tickets",
      filters: [],
      sortBy: "createdAt",
      sortOrder: "desc" as const,
      columnsVisible: ["title", "priority", "assignee", "createdAt"],
      isPublic: true,
      isDefault: true,
      divisionId: "1",
      createdBy: "1",
      createdAt: new Date("2024-01-01"),
      updatedAt: new Date("2024-01-01"),
    },
    {
      id: "2",
      name: "High Priority",
      description: "High and critical priority tickets",
      filters: [
        {
          id: "1",
          fieldId: "1",
          operator: "in" as const,
          value: ["high", "critical"],
        },
      ],
      sortBy: "priority",
      sortOrder: "desc" as const,
      columnsVisible: ["title", "priority", "assignee", "dueDate"],
      isPublic: true,
      isDefault: false,
      divisionId: "1",
      createdBy: "1",
      createdAt: new Date("2024-01-02"),
      updatedAt: new Date("2024-01-02"),
    },
    {
      id: "3",
      name: "My Assignments",
      description: "Tickets assigned to me",
      filters: [],
      sortBy: "updatedAt",
      sortOrder: "desc" as const,
      columnsVisible: ["title", "priority", "status", "updatedAt"],
      isPublic: false,
      isDefault: false,
      divisionId: "1",
      createdBy: "2",
      createdAt: new Date("2024-01-03"),
      updatedAt: new Date("2024-01-03"),
    },
  ] as View[],

  dashboardStats: {
    totalFields: 4,
    activeForms: 3,
    teamMembers: 4,
    activeGroups: 3,
    totalTags: 5,
    customViews: 3,
  } as DashboardStats,

  recentActivity: [
    {
      id: "1",
      action: "Field created",
      description: "Priority field was created by John Doe",
      time: "2 minutes ago",
      type: "field" as const,
      userId: "1",
    },
    {
      id: "2",
      action: "Form updated",
      description: "Support Ticket Form was modified",
      time: "15 minutes ago",
      type: "form" as const,
      userId: "2",
    },
    {
      id: "3",
      action: "User added",
      description: "Anna Brown joined the Technical team",
      time: "1 hour ago",
      type: "user" as const,
      userId: "1",
    },
    {
      id: "4",
      action: "Tag created",
      description: "New 'Training' tag was added",
      time: "2 hours ago",
      type: "tag" as const,
      userId: "2",
    },
    {
      id: "5",
      action: "View created",
      description: "My Assignments view was created",
      time: "3 hours ago",
      type: "view" as const,
      userId: "2",
    },
  ] as RecentActivity[],
};

// Helper function to get next ID
export function getNextId(collection: any[]): string {
  const maxId = Math.max(...collection.map((item) => parseInt(item.id, 10)));
  return (maxId + 1).toString();
}

// Helper function to simulate database delay
export function simulateDelay(ms: number = 100): Promise<void> {
  return new Promise((resolve) => setTimeout(resolve, ms));
}
